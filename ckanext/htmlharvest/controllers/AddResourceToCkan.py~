import urllib2
import urllib
import json

import pprint

# Put the details of the dataset we're going to create into a dict.
dataset_dict={}
def AddResourceToCkan(dataset_dict):
	# Use the json module to dump the dictionary to a string for posting.
		
		#dataset_dict['package_id']='12345-12345-123455'
		#dataset_dict = {
    		#	'name': 'my_dataset_name_example',
    		#	'url': 'www.the_api2.gr',
			#'title': 'the_api2',
			#'package_id':'aaaa-aaaa-bbbb-ddd-couchdb',
			#'source_type':'ckan'
			
			
			#	}
	try:
		data_string = urllib.quote(json.dumps(dataset_dict))
		
		# We'll use the package_create function to create a new dataset.
				
		request = urllib2.Request(
		    'http://127.0.0.1:5000/api/action/harvest_source_create')

		# Creating a dataset requires an authorization header.
		# Replace *** with your API key, from your user account on the CKAN site
		# that you're creating the dataset on.
		request.add_header('Authorization', '6a395959-e2aa-44c2-b418-d2c63ecc3139')

		# Make the HTTP request.
		response = urllib2.urlopen(request, data_string)
		assert response.code == 200

		# Use the json module to load CKAN's response into a dictionary.
		response_dict = json.loads(response.read())
		assert response_dict['success'] is True

		# package_create returns the created package as its result.
		created_package = response_dict['result']
		pprint.pprint(created_package)
		
	except:
		print('Resource exists.. Updating Resource..')
		data_string = urllib.quote(json.dumps(dataset_dict))
		
		# We'll use the package_create function to create a new dataset.
				
		request = urllib2.Request(
		    'http://127.0.0.1:5000/api/action/harvest_source_update')

		# Creating a dataset requires an authorization header.
		# Replace *** with your API key, from your user account on the CKAN site
		# that you're creating the dataset on.
		request.add_header('Authorization', '6a395959-e2aa-44c2-b418-d2c63ecc3139')

		# Make the HTTP request.
		response = urllib2.urlopen(request, data_string)
		assert response.code == 200

		# Use the json module to load CKAN's response into a dictionary.
		response_dict = json.loads(response.read())
		assert response_dict['success'] is True

		# package_create returns the created package as its result.
		created_package = response_dict['result']
		pprint.pprint(created_package)
