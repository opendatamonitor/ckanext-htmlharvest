from bs4 import BeautifulSoup
import urllib2
import requests
import time
from xml.dom.minidom import parseString
import re
import difflib
import json
import logging
import SaveLabels
import pycouchdb
import harvester_final


xtras1=[]

def AddToJson(soup3,label,j,ckannotes,ckanlicense,ckanresource,ckantags,ckancontactpoint,ckanpublisher,text_file,ckanjason,a_link,ckanExtrasUpdateDate,ckanExtrasCategory
,ckanExtrasFrequency,ckanExtrasLanguage,ckanExtrasVersion,ckanMaintainer,ckanExtrasDate,xtras1,ckangeographiccoverage,ckantemporalcoverage):
  
  count=0
  AddTemporalCoverage=False
  AddUpdateDate=False
  AddCategory=False
  AddLanguage=False
  AddFrequency=False
  AddVersion=False
  AddReleaseDate=False
  AddGeographicCoverage=False
  extra=""
  string_matching2=0
  string_matching3=0
  string_matching4=0
  string_matching5=0
  string_matching6=0
  string_matching7=0
  string_matching8=0
  string_matching9=0
  xtras=[]
  while count<len(xtras1):
	xtras.append(xtras1[count])
	count+=1
  xtras1[:]=[]
  
  while j<len(label):
	
	if label[j] in soup3:
		
		for x in range(0,len(soup3)):
			
			if(soup3[x]==label[j]):
				
				parent=str(soup3[x].parent.parent)
				parent1=BeautifulSoup(parent)
				parent2=parent1.find_all(text=True)
				i1=0
				
				while i1<len(parent2):
					
					temp=parent2[i1]
					if temp==" " or temp=="\n":
						del parent2[i1]
					i1+=1
				## metatropi gia na pianei to ispaniko ka..
				
				if len(parent2)==1:
					
					parent=str(soup3[x].parent.parent.parent)
					parent1=BeautifulSoup(parent)
					parent2=parent1.find_all(text=True)
					i1=0
				
					while i1<len(parent2):
						
						temp=parent2[i1]
						if temp==" " or temp=="\n":
							
							del parent2[i1]
						i1+=1
					
				
		#---- check if label.next was found 
				if len(parent2)>1:
					
					counter=0
					while counter<len(parent2):
						
						c=0
						link1=""
						finda=parent2[counter].parent.parent
						
						for a in finda.find_all('a', href=True):
							a=str(a['href'])
							
							if a not in a_link:
								a_link.append(a)
						
						while c<len(a_link):
							link1=link1+' '+str(a_link[c])+' '
						
							c+=1

						if counter==0: 											
						
						#----find elements label,harmonise and add it to json: 
						
							ckanjasonLabel=AddJsonLabelToElement(ckannotes,"notes",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckanlicense,"license_id",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckanresource,"resources",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckantags,"tags",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckancontactpoint,"author_email",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckanpublisher,"author",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel
							ckanjasonLabel=AddJsonLabelToElement(ckanMaintainer,"maintainer",counter,ckanjason,parent2)
							ckanjason=ckanjason+ckanjasonLabel


						if counter<len(parent2)-1 and counter>0: 
							
					##---- ckan extras
							
							xtras,string_matching2,AddUpdateDate=HandleExtras(ckanExtrasUpdateDate,"Update_date",parent2,counter,AddUpdateDate,xtras)
							xtras,string_matching3,AddCategory=HandleExtras(ckanExtrasCategory,"Category",parent2,counter,AddCategory,xtras)
							xtras,string_matching4,AddLanguage=HandleExtras(ckanExtrasLanguage,"Language",parent2,counter,AddLanguage,xtras)
							xtras,string_matching5,AddFrequency=HandleExtras(ckanExtrasFrequency,"Frequency",parent2,counter,AddFrequency,xtras)
							xtras,string_matching6,AddVersion=HandleExtras(ckanExtrasVersion,"Version",parent2,counter,AddVersion,xtras)
							xtras,string_matching7,AddReleaseDate=HandleExtras(ckanExtrasDate,"Release Date",parent2,counter,AddReleaseDate,xtras)
							xtras,string_matching8,AddGeographicCoverage=HandleExtras(ckangeographiccoverage,"Geographic Coverage",parent2,counter,AddGeographicCoverage,xtras)
							xtras,string_matching9,AddTemporalCoverage=HandleExtras(ckantemporalcoverage,"Temporal Coverage",parent2,counter,AddTemporalCoverage,xtras) 
							
					##--- ckan tags
							
							string_matching1=difflib.SequenceMatcher(None, ckantags.encode('utf-8'),parent2[0].encode('utf-8').lstrip()).ratio()
							if string_matching1>=0.7 and str(parent2[0].encode('utf-8').lstrip())!='':
							  if parent2[counter].encode('utf-8')==' ':
								ckanjason=ckanjason+"{'name': '"+str(parent2[counter].encode('utf-8').replace(' ','null').replace("'",'').replace('"',''))+"'},"
							  else:
								ckanjason=ckanjason+"{'name': '"+str(parent2[counter].encode('utf-8').replace(',',' ').replace(' ','  ').replace("'",'').replace('"',''))+"'},"	
							

				##--- ckan resources
				
				##edw uparxei to provlima to ejkana 0 apo 1 to counter >1
							ckanjasontemp=HandleResources(ckanresource,parent2,counter,a_link,string_matching1,string_matching2,string_matching3,string_matching4,string_matching5,string_matching6,string_matching7,string_matching8,string_matching9,text_file)
							ckanjason=ckanjason+ckanjasontemp

						if counter==len(parent2)-1 :
							
					##- ckan extras	
							xtras,string_matching2,AddUpdateDate=HandleExtras(ckanExtrasUpdateDate,"Update_date",parent2,counter,AddUpdateDate,xtras)
							xtras,string_matching3,AddCategory=HandleExtras(ckanExtrasCategory,"Category",parent2,counter,AddCategory,xtras)
							xtras,string_matching4,AddLanguage=HandleExtras(ckanExtrasLanguage,"Language",parent2,counter,AddLanguage,xtras)
							xtras,string_matching5,AddFrequency=HandleExtras(ckanExtrasFrequency,"Frequency",parent2,counter,AddFrequency,xtras)
							xtras,string_matching6,AddVersion=HandleExtras(ckanExtrasVersion,"Version",parent2,counter,AddVersion,xtras)
							xtras,string_matching7,AddReleaseDate=HandleExtras(ckanExtrasDate,"Release Date",parent2,counter,AddReleaseDate,xtras)
							xtras,string_matching8,AddGeographicCoverage=HandleExtras(ckangeographiccoverage,"Geographic Coverage",parent2,counter,AddGeographicCoverage,xtras)
							xtras,string_matching9,AddTemporalCoverage=HandleExtras(ckantemporalcoverage,"Temporal Coverage",parent2,counter,AddTemporalCoverage,xtras) 

					##--- ckan tags												
						
							string_matching1=difflib.SequenceMatcher(None, ckantags.encode('utf-8'),parent2[0].encode('utf-8').lstrip()).ratio()
							
							if string_matching1>=0.7 and str(parent2[0].encode('utf-8').lstrip())!='':
							  if parent2[counter].encode('utf-8')==' ':
								  ckanjason=ckanjason+"{'name': '"+str(parent2[counter].encode('utf-8').replace(' ','null').replace("'",'').replace('"',''))+"'}]"+','
							  else:
								ckanjason=ckanjason+"{'name': '"+str(parent2[counter].encode('utf-8').replace(',',' ').replace(' ','  ').replace("'",'').replace('"',''))+"'}]"+','
							
					##--- ckan resource
							ckanjasontemp1,x=HandleResource(x,ckanresource,parent2,counter,a_link,string_matching1,string_matching2,string_matching3,string_matching4,string_matching5,string_matching6,string_matching7,string_matching8,string_matching9,text_file)
							ckanjason=ckanjason+ckanjasontemp1						
						
						if counter>0:
							text_file.write(' ')
						counter=counter+1

					text_file.write('\n')
					
					text_file.write('links: ')
					
					text_file.write(str(link1))
					a_link[:]=[]
					text_file.write('\n')
		

	j=j+1
  extras_all=""
  count1=0
  
  while count1<len(xtras):
	if count1==len(xtras)-1:
	  extras_all+=str(xtras[count1])
	else: extras_all+=str(xtras[count1])+","
	count1+=1
	
  ckanjason=ckanjason+'"extras'+'":['+extras_all.rstrip(',')+"],"
  ckanjason1=str(ckanjason)
  ckanjason=ckanjason1.replace(",,",",")
  
  xtras[:]=[]
  return ckanjason



## Add Label to Json Element Function

def AddJsonLabelToElement(variable,variable_name,counter,ckanjason,parent2):
  ckanjasonLabel=""
  string_matching=difflib.SequenceMatcher(None, variable.encode('utf-8'),parent2[counter].encode('utf-8').lstrip()).ratio()
  if string_matching>=0.8 and variable_name!="resources" and variable_name!="tags":
	ckanjasonLabel="'"+str(variable_name)+"':'"
  if string_matching>=0.8 and variable_name=="resources":
	ckanjasonLabel="'resources"+"':["
  if string_matching>=0.8 and str(parent2[counter].encode('utf-8').lstrip())!='' and variable_name=="tags":
	ckanjason=ckanjason+"'tags"+"':["	
  return ckanjasonLabel




## Handle Extras Function
def HandleExtras(variable,variable_name,parent2,counter,TempBoolean,xtras):
  extra=""
  string_matching=difflib.SequenceMatcher(None, variable.encode('utf-8'),parent2[0].encode('utf-8').lstrip()).ratio()
  if string_matching>=0.8 and counter!=len(parent2)-1:
	if len(parent2)==1:
		extra="{"+"'key':"+'"'+str(variable_name)+'",'+'"value":'+"'"+str(parent2[counter].encode('utf-8').replace("'",'').replace('"','').replace("  ","").replace("	","").replace("\n",""))+"'},"
		
	if len(parent2)>1 and TempBoolean==False:
		counter3=1
		## if the result is more than 1 string add to a list
		temp1="["
		while counter3<len(parent2):
			if counter3<len(parent2)-1:
			  temp1=temp1+"'"+parent2[counter3]+"'"+','
			if counter3==len(parent2)-1:
			  temp1=temp1+"'"+parent2[counter3]+"'"+']'
			counter3+=1
		extra="{"+"'key':"+'"'+str(variable_name)+'",'+'"value":'+str(temp1.encode('utf-8'))+"},"
		TempBoolean=True
  if counter==len(parent2)-1 :
	  if string_matching>=0.8 and TempBoolean==False:
		extra="{"+"'key':"+'"'+str(variable_name)+'",'+'"value":'+"'"+str(parent2[counter].encode('utf-8').replace("'",'').replace('"','').replace("  ","").replace("	","").replace("\n",""))+"'},"
		#xtras.append(temporalcoverage)
		TempBoolean=True
  if extra!="":
	  xtras.append(extra)
  
  return (xtras,string_matching,TempBoolean)
  



  
##Handle Resources Function
def HandleResources(ckanresource,parent2,counter,a_link,string_matching1,string_matching2,string_matching3,string_matching4,string_matching5,string_matching6,string_matching7,string_matching8,string_matching9,text_file):
  ckanjasontemp=""
  string_matching=difflib.SequenceMatcher(None, ckanresource.encode('utf-8'),parent2[0].encode('utf-8').lstrip()).ratio()
  if string_matching>=0.8 and counter>0:
	  
	  try:
		  url_temp=str(a_link[counter-1].encode('utf-8'))
		  if len(a_link)>=1:
			  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)
			  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter].encode('utf-8'))+"','url':'"+str(a_link[counter-1])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"},"	
		  if len(a_link)<1:
			  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)
			  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter].encode('utf-8'))+"','url':'"+str(a_link[counter-1])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"}],"	
		  
		  #else:ckanjason=ckanjason+"{'name': '"+str(parent2[counter].encode('utf-8'))+"','url':'"+"'},"	
	  except IndexError:
		  url_temp=str(a_link[counter-2].encode('utf-8'))	
		  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)		
		  if len(a_link)>1:
			  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)
			  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter-1].encode('utf-8'))+"','url':'"+str(a_link[counter-2])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"},"	
		  if len(a_link)<=1:
			  print("type1:  "+str(type1))
			  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)
			  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter-1].encode('utf-8'))+"','url':'"+str(a_link[counter-2])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"}],"	
		  else:ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter].encode('utf-8'))+"','url':'"+"'},"

  else :
	  if str(parent2[counter].encode('utf-8').lstrip())!='' and counter>0 and string_matching<=0.8 and string_matching1<=0.7 and string_matching2<0.8 and string_matching3<0.8 and string_matching4<0.8 and string_matching5<0.8 and string_matching6<0.8 and string_matching7<0.8 and string_matching8<0.8 and string_matching9<0.8:
		  ckanjasontemp=ckanjasontemp+str(parent2[counter].encode('utf-8').strip().replace("'","").replace('"',''))
  return ckanjasontemp




def HandleResource(x,ckanresource,parent2,counter,a_link,string_matching1,string_matching2,string_matching3,string_matching4,string_matching5,string_matching6,string_matching7,string_matching8,string_matching9,text_file):
  ckanjasontemp=""
  string_matching=difflib.SequenceMatcher(None, ckanresource.encode('utf-8'),parent2[0].encode('utf-8').lstrip()).ratio()
  if string_matching>=0.8 :  
	  try:
		  url_temp=str(a_link[counter-1].encode('utf-8'))	
		  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)									
		  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter].encode('utf-8').replace("'",'').replace('"',''))+"','url':'"+str(a_link[counter-1])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"}]"+','
		  
	  except IndexError:
		  #x+=1
		  try:
			  url_temp=str(a_link[counter-2].encode('utf-8'))	
			  type1,filesize=AddLinkToJson.CheckTypeAndFilesize(url_temp)		
			  if len(a_link)>1:
				  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter-1].encode('utf-8').replace("'",'').replace('"',''))+"','url':'"+str(a_link[counter-2])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"}"+','
			  if len(a_link)<=1:
				  ckanjasontemp=ckanjasontemp+"{'name': '"+str(parent2[counter-1].encode('utf-8').replace("'",'').replace('"',''))+"','url':'"+str(a_link[counter-2])+"'"+",'format':"+"'"+type1+"'"+',"size":'+"'"+str(filesize)+"'"+"}]"+','
		  except IndexError:
					  x+=1
  else: 
	  if string_matching1<0.7 and string_matching2<0.8 and string_matching3<0.8 and string_matching4<0.8 and string_matching5<0.8 and string_matching6<0.8 and string_matching7<0.8 and string_matching8<0.8 and string_matching9<0.8:													
		ckanjasontemp=ckanjasontemp+str(parent2[counter].encode('utf-8').replace("'","").replace('"','')).strip()+"'"+','
  return (ckanjasontemp,x)
